name: 🚀 Simple CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  # 🔒 SECURITY SCAN
  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    outputs:
      security-status: ${{ steps.security.outputs.status }}
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔒 Run CodeQL Analysis
        id: security
        uses: github/codeql-action/init@v3
        with:
          languages: python
          queries: security-extended,security-and-quality

      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:python"

      - name: 🎯 Set security status
        run: echo "status=passed" >> $GITHUB_OUTPUT

  # 🧪 TEST & VALIDATION
  test-and-validate:
    name: 🧪 Test & Validation
    runs-on: ubuntu-latest
    needs: [security-scan]
    outputs:
      test-status: ${{ steps.test-status.outputs.status }}
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: 📦 Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: 📦 Install test dependencies
        run: |
          pip install pytest pytest-cov pytest-mock

      - name: 🔍 Lint and format check
        run: |
          echo "🔍 Running linting checks..."
          pip install flake8 black isort
          black --check --diff .
          isort --check-only --diff .
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: 🧪 Run unit tests
        run: |
          echo "🧪 Running unit tests..."
          pytest tests/ -v --cov=. --cov-report=xml --cov-report=html

      - name: 📊 Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

      - name: 🎯 Set test status
        id: test-status
        run: echo "status=passed" >> $GITHUB_OUTPUT

  # 📊 POST-EXECUTION SUMMARY
  summary:
    name: 📊 CI Summary
    runs-on: ubuntu-latest
    needs: [security-scan, test-and-validate]
    if: always()
    steps:
      - name: 📊 CI Summary
        run: |
          echo "📊 CI Pipeline Summary:"
          echo "========================"
          echo "Security Scan: ${{ needs.security-scan.outputs.security-status || 'unknown' }}"
          echo "Tests: ${{ needs.test-and-validate.outputs.test-status || 'unknown' }}"
          echo ""
          echo "🎯 Next Steps:"
          echo "1. If all checks pass, your code is ready!"
          echo "2. Deploy manually or set up simple deployment later"
          echo "3. Focus on getting the app running first"
          
          if [ "${{ needs.security-scan.result }}" != "success" ] || [ "${{ needs.test-and-validate.result }}" != "success" ]; then
            echo ""
            echo "❌ Some checks failed. Fix the issues and push again."
            exit 1
          else
            echo ""
            echo "✅ All checks passed! Your code is production-ready."
          fi
