# GitHub Actions Workflow for PramodChandrayan/neurochatagent
# Deploy Streamlit Finance Chatbot to Google Cloud Run

name: Deploy Streamlit Finance Chatbot to Cloud Run

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  GCP_PROJECT_ID: neurofinance-468916
  REGION: us-central1
  SERVICE_NAME: finance-chatbot

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        token_format: access_token
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: ${{ secrets.DEPLOY_SA_EMAIL }}
        
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      
    - name: Configure Docker for Artifact Registry
      run: |
        # Configure Docker to use Artifact Registry
        gcloud auth configure-docker us-central1-docker.pkg.dev --quiet
        echo "‚úÖ Docker configured for Artifact Registry"
      
    - name: Verify Authentication
      run: |
        echo "üîç Verifying GCP authentication..."
        gcloud auth list
        gcloud config get-value project
        echo "‚úÖ Authentication verified"
        
    - name: Create Artifact Registry repository
      run: |
        echo "üèóÔ∏è Creating Artifact Registry repository..."
        # Create Artifact Registry repository if it doesn't exist
        gcloud artifacts repositories create ${{ env.SERVICE_NAME }} \
          --repository-format=docker \
          --location=${{ env.REGION }} \
          --description="Docker repository for ${{ env.SERVICE_NAME }}" \
          --quiet || echo "Repository already exists"
        echo "‚úÖ Artifact Registry repository ready"
      
    - name: Build and push container
      run: |
        echo "üê≥ Building and pushing Docker image..."
        # Use Artifact Registry instead of Container Registry
        docker build -t us-central1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .
        echo "‚úÖ Docker image built successfully"
        
        echo "üì§ Pushing to Artifact Registry..."
        docker push us-central1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
        echo "‚úÖ Docker image pushed successfully"
        
    - name: Deploy to Cloud Run
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ env.SERVICE_NAME }}
        image: us-central1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
        region: ${{ env.REGION }}
        env_vars: |
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          PINECONE_API_KEY=${{ secrets.PINECONE_API_KEY }}
          PINECONE_ENVIRONMENT=${{ secrets.PINECONE_ENVIRONMENT }}
        port: 8501
        cpu: 1
        memory: 2Gi
        max_instances: 10
        
    - name: Show service URL
      run: |
        echo "üéâ Streamlit Finance Chatbot deployed successfully!"
        echo "üåê Service URL: $(gcloud run services describe ${{ env.SERVICE_NAME }} --region=${{ env.REGION }} --format='value(status.url)')"
