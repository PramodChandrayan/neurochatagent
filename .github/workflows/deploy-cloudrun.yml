name: Deploy to Cloud Run

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: 'read'
  id-token: 'write'

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: ${{ secrets.GCP_REGION }}
  SERVICE_NAME: finance-chatbot
  REGION: ${{ secrets.GCP_REGION }}

jobs:
  migrate-database:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Google Cloud Auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: ${{ secrets.DEPLOY_SA_EMAIL }}
        
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      
    - name: Run Database Migrations
      run: |
        echo "üîÑ Running database migrations..."
        # Set database URL based on detected type
        export DATABASE_URL="${{ secrets.DATABASE_URL }}"
        
        # Run migrations based on detected type
        if [ -f "alembic.ini" ]; then
          echo "üìä Running Alembic migrations..."
          alembic upgrade head
        elif [ -f "manage.py" ]; then
          echo "üêç Running Django migrations..."
          python manage.py migrate
        else
          echo "‚ö†Ô∏è No migration system detected, skipping migrations"
        fi
        echo "‚úÖ Database migrations completed"

  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Google Cloud Auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: ${{ secrets.DEPLOY_SA_EMAIL }}
        
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      
    - name: Configure Docker for Artifact Registry
      run: |
        # Configure Docker to use Artifact Registry
        gcloud auth configure-docker us-central1-docker.pkg.dev --quiet
        echo "‚úÖ Docker configured for Artifact Registry"
      
    - name: Create Artifact Registry repository
      run: |
        echo "üèóÔ∏è Creating Artifact Registry repository..."
        # Create Artifact Registry repository if it doesn't exist
        gcloud artifacts repositories create ${{ env.SERVICE_NAME }} \
          --repository-format=docker \
          --location=${{ env.REGION }} \
          --description="Docker repository for ${{ env.SERVICE_NAME }}" \
          --quiet || echo "Repository already exists"
        echo "‚úÖ Artifact Registry repository ready"
      
    - name: Build and push container
      run: |
        echo "üê≥ Building and pushing Docker image..."
        # Use Artifact Registry instead of Container Registry
        docker build -t us-central1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .
        echo "‚úÖ Docker image built successfully"
        
        echo "üì§ Pushing to Artifact Registry..."
        docker push us-central1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
        echo "‚úÖ Docker image pushed successfully"
        
    - name: Deploy to Cloud Run
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ env.SERVICE_NAME }}
        image: us-central1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
        region: ${{ env.REGION }}
        
    - name: Show Output
      run: echo ${{ steps.deploy.outputs.url }}
